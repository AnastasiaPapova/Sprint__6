{"name": "При нажатии на вопрос раскрывается аккордеон с ответом", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-0\" class=\"accordion__button\"> is not clickable at point (966,37) because another element <button class=\"Button_Button__ra12g\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31", "trace": "self = <test_FAQ.TestYandexScooterFAQ object at 0x1102cef30>, question = ['xpath', \"//*[@id='accordion__heading-0']\"], answer = ['xpath', \"//*[@id='accordion__panel-0']\"]\nexpected_answer = 'Сутки — 400 рублей. Оплата курьеру — наличными или картой.'\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"42a94b0f-d162-47ae-86d4-926752131248\")>\n\n    @allure.title(\"При нажатии на вопрос раскрывается аккордеон с ответом\")\n    @allure.description(\"Проверяем список вопросов и ответов на главной странице\")\n    @pytest.mark.parametrize('question, answer, expected_answer',\n                             [(AnswersQuestionsFAQ.FIRST_QUESTION_BUTTON, AnswersQuestionsFAQ.FIRST_QUESTION_ANSWER,\n                               YandexScooterFAQAnswers.FIRST_ANSWER),\n                              (AnswersQuestionsFAQ.SECOND_QUESTION_BUTTON, AnswersQuestionsFAQ.SECOND_QUESTION_ANSWER,\n                               YandexScooterFAQAnswers.SECOND_ANSWER),\n                              (AnswersQuestionsFAQ.THIRD_QUESTION_BUTTON, AnswersQuestionsFAQ.THIRD_QUESTION_ANSWER,\n                               YandexScooterFAQAnswers.THIRD_ANSWER),\n                              (AnswersQuestionsFAQ.FOURTH_QUESTION_BUTTON, AnswersQuestionsFAQ.FOURTH_QUESTION_ANSWER,\n                               YandexScooterFAQAnswers.FOURTH_ANSWER),\n                              (AnswersQuestionsFAQ.FIFTH_QUESTION_BUTTON, AnswersQuestionsFAQ.FIFTH_QUESTION_ANSWER,\n                               YandexScooterFAQAnswers.FIFTH_ANSWER),\n                              (AnswersQuestionsFAQ.SIXTH_QUESTION_BUTTON, AnswersQuestionsFAQ.SIXTH_QUESTION_ANSWER,\n                               YandexScooterFAQAnswers.SIXTH_ANSWER),\n                              (AnswersQuestionsFAQ.SEVENTH_QUESTION_BUTTON, AnswersQuestionsFAQ.SEVENTH_QUESTION_ANSWER,\n                               YandexScooterFAQAnswers.SEVENTH_ANSWER),\n                              (AnswersQuestionsFAQ.EIGHTH_QUESTION_BUTTON, AnswersQuestionsFAQ.EIGHTH_QUESTION_ANSWER,\n                               YandexScooterFAQAnswers.EIGHTH_ANSWER)])\n    @allure.title(\"Проверка ответов с ожидаемыми значениями\")\n    def test_questions(self, question, answer, expected_answer, driver):\n        main_page = YandexScooterMainPage(driver)\n        main_page.go_to_site(Urls.MAIN_PAGE)\n        main_page.click_cookie_accept_button()\n>       get_answer = main_page.click_main_page_FAQ(question, answer)\n\ntest/test_FAQ.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:31: in click_main_page_FAQ\n    required_field.click()\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x110176240>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <div id=\\\\\"accordion__headi...sys.mjs:204:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-0\" class=\"accordion__button\"> is not clickable at point (966,37) because another element <button class=\"Button_Button__ra12g\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "description": "Проверяем список вопросов и ответов на главной странице", "steps": [{"name": "Открыть страницу по URL", "status": "passed", "parameters": [{"name": "url", "value": "'https://qa-scooter.praktikum-services.ru/'"}], "start": 1717014765873, "stop": 1717014766436}, {"name": "Принять куки", "status": "passed", "start": 1717014766436, "stop": 1717014766692}, {"name": "Возвращаем значение ответа от требуемого вопроса", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <div id=\"accordion__heading-0\" class=\"accordion__button\"> is not clickable at point (966,37) because another element <button class=\"Button_Button__ra12g\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n", "trace": "  File \"/Users/papovaanastasia/PycharmProjects/Sprint__6/.venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/papovaanastasia/PycharmProjects/Sprint__6/pages/main_page.py\", line 31, in click_main_page_FAQ\n    required_field.click()\n  File \"/Users/papovaanastasia/PycharmProjects/Sprint__6/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/papovaanastasia/PycharmProjects/Sprint__6/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/papovaanastasia/PycharmProjects/Sprint__6/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/papovaanastasia/PycharmProjects/Sprint__6/.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Скролл к элементу страницы", "status": "passed", "parameters": [{"name": "locator", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"42a94b0f-d162-47ae-86d4-926752131248\", element=\"cc01109e-4af4-47ee-8401-e66b401e760e\")>"}], "start": 1717014766697, "stop": 1717014766703}], "parameters": [{"name": "button", "value": "['xpath', \"//*[@id='accordion__heading-0']\"]"}, {"name": "answer", "value": "['xpath', \"//*[@id='accordion__panel-0']\"]"}], "start": 1717014766693, "stop": 1717014766711}], "parameters": [{"name": "question", "value": "['xpath', \"//*[@id='accordion__heading-0']\"]"}, {"name": "answer", "value": "['xpath', \"//*[@id='accordion__panel-0']\"]"}, {"name": "expected_answer", "value": "'Сутки — 400 рублей. Оплата курьеру — наличными или картой.'"}], "start": 1717014765872, "stop": 1717014766717, "uuid": "b9806b2b-5895-4f1f-830f-da756c6553f5", "historyId": "603e2c339b6dc0475219498f0ca9be3e", "testCaseId": "41eda713ae7f82016c038ae42fa09faa", "fullName": "test.test_FAQ.TestYandexScooterFAQ#test_questions", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_FAQ"}, {"name": "subSuite", "value": "TestYandexScooterFAQ"}, {"name": "host", "value": "192.168.1.5"}, {"name": "thread", "value": "32261-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_FAQ"}]}